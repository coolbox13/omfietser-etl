{
  "name": "Jumbo Scraper",
  "nodes": [
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "4b19d3af-c8c4-4ba9-b398-293f9c4d18b6",
              "name": "scraper_api_url",
              "value": "http://jumbo-scraper-api:8000",
              "type": "string"
            },
            {
              "id": "6f6f8131-7431-4ab3-9744-0aa88b9474dd",
              "name": "max_products",
              "value": 100,
              "type": "number"
            },
            {
              "id": "e63f7c5c-892e-4bd6-bd6e-c5c1367aec1c",
              "name": "categories_limit",
              "value": "null",
              "type": "string"
            },
            {
              "id": "cd3c904c-e963-41ff-966b-5cec7123265f",
              "name": "webhook_url",
              "value": "http://n8n:5678/webhook/scraper-complete",
              "type": "string"
            },
            {
              "id": "b2ff1ff3-db49-474a-bb8e-4202e320db88",
              "name": "priority",
              "value": "high",
              "type": "string"
            },
            {
              "id": "6422dc02-91b3-41d5-a19a-8da8b629fe68",
              "name": "notify_on_complete",
              "value": true,
              "type": "boolean"
            }
          ]
        },
        "options": {}
      },
      "id": "35161116-c4d8-4006-81fd-ca4cfb4a9987",
      "name": "Set Jumbo Configuration",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -768,
        432
      ],
      "notes": "Configure for Jumbo scraping - GraphQL optimized"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{ $('Set Jumbo Configuration').item.json.scraper_api_url }}/scrape",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "max_products",
              "value": "={{ $('Set Jumbo Configuration').item.json.max_products }}"
            }
          ]
        },
        "options": {
          "timeout": 30000
        }
      },
      "id": "96124da6-56a7-427c-ad72-f0bea1bf9607",
      "name": "Start Jumbo Scraper",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -320,
        432
      ],
      "notes": "Start Jumbo GraphQL scraping"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "2cf66a8b-30bc-4912-bacc-69e732ccc2c5",
              "name": "job_id",
              "value": "={{ $json.job_id }}",
              "type": "string"
            },
            {
              "id": "ec83d9d3-5f66-4092-ace0-23132848383c",
              "name": "scraper_api_url",
              "value": "={{ $('Set Jumbo Configuration').item.json.scraper_api_url }}",
              "type": "string"
            },
            {
              "id": "44317888-08a0-4b09-a40d-57edadda4e35",
              "name": "status",
              "value": "={{ $json.status }}",
              "type": "string"
            },
            {
              "id": "fa79a5b2-3459-4fd3-8b31-0a8f107c4180",
              "name": "message",
              "value": "={{ $json.message }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "b508eb37-b076-4967-a2ad-7013557243e5",
      "name": "Format Jumbo Job Info",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -80,
        432
      ],
      "notes": "Format Jumbo job information"
    },
    {
      "parameters": {},
      "id": "28461193-1e1a-48c8-aaf3-41ba2362be7d",
      "name": "Wait 5 seconds",
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        160,
        432
      ],
      "webhookId": "73d5ae76-d40f-4eea-b43a-e85294cab986",
      "notes": "Short wait for fast Jumbo jobs (~3-4 seconds)"
    },
    {
      "parameters": {
        "url": "={{ $('Format Jumbo Job Info').item.json.scraper_api_url }}/progress",
        "options": {
          "timeout": 15000
        }
      },
      "id": "ba434019-e125-4234-a663-a969c1fa25dc",
      "name": "Check Jumbo Progress",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        368,
        432
      ],
      "notes": "Check Jumbo progress with clean endpoint"
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.status }}",
                    "rightValue": "idle",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    },
                    "id": "07abd95c-af84-4355-b139-bd08dd994f76"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "completed"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.status }}",
                    "rightValue": "running",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    },
                    "id": "6a679da4-b6e3-4b99-aa34-b0dd49262b08"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "continue"
            }
          ]
        },
        "options": {}
      },
      "id": "40771fa9-903c-4099-bcd1-562ae3f57c29",
      "name": "Route Based on Jumbo Completion",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3,
      "position": [
        576,
        432
      ],
      "notes": "Route based on Jumbo completion flag check"
    },
    {
      "parameters": {
        "mode": "raw",
        "jsonOutput": "{\n  \"progress_info\": \"Jumbo scrape in progress: {{ $json.progress.total_scraped || 0 }} products scraped so far\",\n  \"job_id\": \"{{ $json.job_id }}\",\n  \"api_url\": \"{{ $('Format Jumbo Job Info').first().json.scraper_api_url }}\"\n}",
        "options": {}
      },
      "id": "4d342038-f6b7-4fb7-a151-ea3fb1490489",
      "name": "Log Jumbo Progress",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        880,
        448
      ],
      "notes": "Log Jumbo scraping progress"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.manualTrigger",
      "typeVersion": 1,
      "position": [
        -976,
        288
      ],
      "id": "8a345aa2-19f2-406a-8364-b38d4559db2a",
      "name": "Manual Trigger",
      "notes": "Manual trigger for testing"
    },
    {
      "parameters": {
        "command": "rm -f /shared-data/results/jumbo_* /shared-data/jobs/jumbo_* /shared-data/logs/jumbo_* && echo \"Jumbo cleanup completed\""
      },
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        -560,
        432
      ],
      "id": "e5db786b-0e62-4b8e-84b1-60b834cd3659",
      "name": "Cleanup previous Jumbo scraping"
    },
    {
      "parameters": {
        "fromEmail": "hello@omfietser.nl",
        "toEmail": "hello@coolbox.com",
        "subject": "={{ $json.subject }}",
        "html": "={{ $json.html }}",
        "options": {
          "appendAttribution": "={{ true }}"
        }
      },
      "type": "n8n-nodes-base.emailSend",
      "typeVersion": 2.1,
      "position": [
        528,
        1008
      ],
      "id": "deb06d20-0b66-4a82-a3f4-81847b6764a0",
      "name": "Send Jumbo email",
      "webhookId": "0b289efb-0a6d-46d0-81c4-4937af2b753d",
      "credentials": {
        "smtp": {
          "id": "pEwphKw4tqqGXXjt",
          "name": "SMTP account"
        }
      }
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "field": "weeks",
              "triggerAtDay": [
                1,
                3,
                5
              ],
              "triggerAtHour": 5
            }
          ]
        }
      },
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.2,
      "position": [
        -976,
        432
      ],
      "id": "1cbe3455-a42a-466d-b7f8-a4d5dcc55057",
      "name": "Jumbo Schedule Trigger"
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "scraper-complete",
        "options": {}
      },
      "id": "webhook-scraper-complete-jumbo",
      "name": "Webhook - Scraper Complete",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        -16,
        1008
      ],
      "webhookId": "590150e9-9d8d-4e58-9452-ce8704b86e2f"
    },
    {
      "parameters": {
        "jsCode": "// Extract from nested body if it exists, otherwise use direct payload\nconst payload = $input.all()[0].json;\nconst data = payload.body || payload;\n\n// Extract job information\nconst jobId = data.job_id || 'unknown';\nconst status = data.status || 'unknown';\nconst resultsCount = data.results_count || data.products_scraped || 0;\nconst message = data.message || '';\nconst errorMessage = data.error || '';\n\n// Create status-specific content\nlet subject, html;\n\nif (status === 'completed' && !errorMessage) {\n  subject = `✅ Jumbo Scrape Completed Successfully (${resultsCount} products)`;\n  html = `\n    <div style=\"font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto;\">\n      <div style=\"background: linear-gradient(135deg, #28a745, #20c997); color: white; padding: 20px; border-radius: 8px 8px 0 0;\">\n        <h1 style=\"margin: 0; font-size: 24px;\">🛒 Jumbo Scrape Completed</h1>\n      </div>\n      <div style=\"background: #f8f9fa; padding: 20px; border-radius: 0 0 8px 8px; border: 1px solid #dee2e6;\">\n        <h2 style=\"color: #28a745; margin-top: 0;\">✅ Success!</h2>\n        <p><strong>Products Scraped:</strong> <span style=\"color: #28a745; font-size: 18px; font-weight: bold;\">${resultsCount}</span></p>\n        <p><strong>Job ID:</strong> <code style=\"background: #e9ecef; padding: 2px 6px; border-radius: 4px;\">${jobId}</code></p>\n        <p><strong>Status:</strong> <span style=\"color: #28a745; font-weight: bold; text-transform: uppercase;\">${status}</span></p>\n        ${message ? `<p><strong>Message:</strong> ${message}</p>` : ''}\n        <p><strong>Store:</strong> Jumbo (GraphQL API)</p>\n        <p><strong>Completed at:</strong> ${new Date().toLocaleString('nl-NL')}</p>\n      </div>\n    </div>\n  `;\n} else if (status === 'failed' || errorMessage) {\n  subject = `❌ Jumbo Scrape Failed (Job: ${jobId})`;\n  html = `\n    <div style=\"font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto;\">\n      <div style=\"background: linear-gradient(135deg, #dc3545, #fd7e14); color: white; padding: 20px; border-radius: 8px 8px 0 0;\">\n        <h1 style=\"margin: 0; font-size: 24px;\">🛒 Jumbo Scrape Failed</h1>\n      </div>\n      <div style=\"background: #f8f9fa; padding: 20px; border-radius: 0 0 8px 8px; border: 1px solid #dee2e6;\">\n        <h2 style=\"color: #dc3545; margin-top: 0;\">❌ Failed</h2>\n        <p><strong>Job ID:</strong> <code style=\"background: #e9ecef; padding: 2px 6px; border-radius: 4px;\">${jobId}</code></p>\n        <p><strong>Status:</strong> <span style=\"color: #dc3545; font-weight: bold; text-transform: uppercase;\">${status}</span></p>\n        ${message ? `<p><strong>Message:</strong> ${message}</p>` : ''}\n        ${errorMessage ? `<div style=\"background: #f8d7da; border: 1px solid #f5c6cb; color: #721c24; padding: 10px; border-radius: 4px; margin: 10px 0;\"><strong>Error:</strong> ${errorMessage}</div>` : ''}\n        <p><strong>Products Scraped:</strong> ${resultsCount}</p>\n        <p><strong>Store:</strong> Jumbo (GraphQL API)</p>\n        <p><strong>Failed at:</strong> ${new Date().toLocaleString('nl-NL')}</p>\n      </div>\n    </div>\n  `;\n} else if (status === 'cancelled' || status === 'stopped') {\n  subject = `⏹️ Jumbo Scrape Stopped (Job: ${jobId})`;\n  html = `\n    <div style=\"font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto;\">\n      <div style=\"background: linear-gradient(135deg, #6c757d, #adb5bd); color: white; padding: 20px; border-radius: 8px 8px 0 0;\">\n        <h1 style=\"margin: 0; font-size: 24px;\">🛒 Jumbo Scrape Stopped</h1>\n      </div>\n      <div style=\"background: #f8f9fa; padding: 20px; border-radius: 0 0 8px 8px; border: 1px solid #dee2e6;\">\n        <h2 style=\"color: #6c757d; margin-top: 0;\">⏹️ Stopped</h2>\n        <p><strong>Job ID:</strong> <code style=\"background: #e9ecef; padding: 2px 6px; border-radius: 4px;\">${jobId}</code></p>\n        <p><strong>Status:</strong> <span style=\"color: #6c757d; font-weight: bold; text-transform: uppercase;\">${status}</span></p>\n        ${message ? `<p><strong>Message:</strong> ${message}</p>` : ''}\n        <p><strong>Products Scraped:</strong> ${resultsCount}</p>\n        <p><strong>Store:</strong> Jumbo (GraphQL API)</p>\n        <p><strong>Stopped at:</strong> ${new Date().toLocaleString('nl-NL')}</p>\n      </div>\n    </div>\n  `;\n} else {\n  subject = `ℹ️ Jumbo Scrape Status Update (Job: ${jobId})`;\n  html = `\n    <div style=\"font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto;\">\n      <div style=\"background: linear-gradient(135deg, #17a2b8, #6f42c1); color: white; padding: 20px; border-radius: 8px 8px 0 0;\">\n        <h1 style=\"margin: 0; font-size: 24px;\">🛒 Jumbo Scrape Update</h1>\n      </div>\n      <div style=\"background: #f8f9fa; padding: 20px; border-radius: 0 0 8px 8px; border: 1px solid #dee2e6;\">\n        <h2 style=\"color: #17a2b8; margin-top: 0;\">ℹ️ Status Update</h2>\n        <p><strong>Job ID:</strong> <code style=\"background: #e9ecef; padding: 2px 6px; border-radius: 4px;\">${jobId}</code></p>\n        <p><strong>Status:</strong> <span style=\"color: #17a2b8; font-weight: bold; text-transform: uppercase;\">${status}</span></p>\n        ${message ? `<p><strong>Message:</strong> ${message}</p>` : ''}\n        <p><strong>Products Scraped:</strong> ${resultsCount}</p>\n        <p><strong>Store:</strong> Jumbo (GraphQL API)</p>\n        <p><strong>Updated at:</strong> ${new Date().toLocaleString('nl-NL')}</p>\n      </div>\n    </div>\n  `;\n}\n\nreturn { subject, html };"
      },
      "id": "analyze-jumbo-job-status",
      "name": "Analyze Job Status",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        272,
        1008
      ]
    }
  ],
  "pinData": {},
  "connections": {
    "Manual Trigger": {
      "main": [
        [
          {
            "node": "Set Jumbo Configuration",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set Jumbo Configuration": {
      "main": [
        [
          {
            "node": "Cleanup previous Jumbo scraping",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Start Jumbo Scraper": {
      "main": [
        [
          {
            "node": "Format Jumbo Job Info",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait 5 seconds": {
      "main": [
        [
          {
            "node": "Check Jumbo Progress",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Jumbo Progress": {
      "main": [
        [
          {
            "node": "Route Based on Jumbo Completion",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Route Based on Jumbo Completion": {
      "main": [
        [],
        [
          {
            "node": "Log Jumbo Progress",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Log Jumbo Progress": {
      "main": [
        [
          {
            "node": "Wait 5 seconds",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Cleanup previous Jumbo scraping": {
      "main": [
        [
          {
            "node": "Start Jumbo Scraper",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Jumbo Schedule Trigger": {
      "main": [
        [
          {
            "node": "Set Jumbo Configuration",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Format Jumbo Job Info": {
      "main": [
        [
          {
            "node": "Wait 5 seconds",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Webhook - Scraper Complete": {
      "main": [
        [
          {
            "node": "Analyze Job Status",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Analyze Job Status": {
      "main": [
        [
          {
            "node": "Send Jumbo email",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": true,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "85cd98b9-ffac-423d-bec3-adca9303b698",
  "meta": {
    "instanceId": "ff86f1271f3774b5ec7ae16a0c838a4eb5e655bdb89bad020914df6993bd2aac"
  },
  "id": "lSMWBBBrRJI70e6a",
  "tags": []
}