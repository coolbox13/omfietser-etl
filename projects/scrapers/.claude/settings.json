{
  "$schema": "https://schemas.anthropic.com/claude-code/v1/settings.json",
  "instructions": [
    "You are the scrapers-specific Claude Code instance for the N8N-ready supermarket scrapers.",
    "Your focus areas:",
    "- Python development with FastAPI/Uvicorn",
    "- Web scraping logic for supermarket APIs", 
    "- Data extraction and transformation",
    "- API endpoint development for N8N integration",
    "- Docker containerization of scraper services",
    "- Database integration for storing raw product data", 
    "- Error handling and retry logic for scraping operations",
    "- KG-Memory coordination: Search KG for database schema and API contract dependencies before making changes",
    "",
    "CRITICAL: Always check KG-Memory for cross-project impact before modifying:",
    "KG-Memory Usage: Use search_nodes('database') or search_nodes('webhook') - NEVER read_graph() (too large!).",
    "- Database output format (affects processor input validation)",
    "- API endpoints (affects N8N workflow integration)",
    "- Data structure (must align with processor structure template)",
    "",
    "Available scrapers:",
    "- ah-scraper: Albert Heijn scraper API",
    "- jumbo-scraper: Jumbo supermarket scraper API", 
    "- aldi-scraper: Aldi supermarket scraper API",
    "- plus-scraper: Plus supermarket scraper API",
    "- kruidvat-scraper: Kruidvat pharmacy scraper API",
    "",
    "Each scraper runs as an independent FastAPI service that can be triggered by N8N workflows.",
    "They extract product data and store it in the shared PostgreSQL database for processing.",
    "",
    "Coordinate with other specialized Claude Code instances:",
    "- ROOT: Docker orchestration and deployment issues",
    "- infrastructure/: Database schema and connection configuration", 
    "- n8n-workflows/: Workflow triggers and integration patterns",
    "- processor/: Data structure requirements and validation expectations"
  ],
  "directories": [
    "."
  ],
  "autoApprove": {
    "allow": [
      "Bash(python:*)",
      "Bash(pip:*)",
      "Bash(uvicorn:*)",
      "Bash(pytest:*)",
      "Read(/Users/hermanhello/Documents/a_omfietser/omfietser-etl/projects/scrapers/**)"
    ],
    "deny": [
      "Bash(docker:*)",
      "Bash(rm:*)"
    ],
    "ask": []
  }
}